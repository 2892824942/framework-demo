<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.framework</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>demo</name>
    <description>Demo project for Spring Cloud Alibaba</description>
    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <aliyun-spring-boot.version>1.0.0</aliyun-spring-boot.version>
        <spring-boot.version>2.7.18</spring-boot.version>
        <spring-cloud-alibaba.version>2021.0.5.0</spring-cloud-alibaba.version>
        <spring.cloud.version>2021.0.5</spring.cloud.version>
        <mysql.version>8.0.33</mysql.version>
        <swagger-annotation.version>1.5.20</swagger-annotation.version>
        <ty-framework.version>0.0.6-SNAPSHOT</ty-framework.version>
        <springdoc.version>1.6.15</springdoc.version>
        <remote.debug.port>50005</remote.debug.port>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <lombok.version>1.18.30</lombok.version>
        <mapstruct-plus.version>1.3.5</mapstruct-plus.version>
        <maven-deploy.version>2.8.2</maven-deploy.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    </properties>

    <modules>
        <module>demo-start</module>
        <module>demo-web</module>
        <module>demo-service</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- 导入 框架依赖 -->
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>com.ty</groupId>
                <artifactId>ty-framework-dependencies</artifactId>
                <version>${ty-framework.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.framework</groupId>
                <artifactId>demo-start</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>com.framework</groupId>
                <artifactId>demo-web</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>com.framework</groupId>
                <artifactId>demo-service</artifactId>
                <version>0.0.1-SNAPSHOT</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <profiles>
        <profile>
            <id>本地环境</id>
            <properties>
                <SPRING_PROFILES>local</SPRING_PROFILES>
                <JAVA_OPTS>-Duser.timezone=Asia/Shanghai -Dlog4j2.disable.jmx=true
                    -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${remote.debug.port}
                </JAVA_OPTS>
            </properties>
        </profile>

        <profile>
            <id>开发环境</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <SPRING_PROFILES>dev</SPRING_PROFILES>
                <JAVA_OPTS>-Duser.timezone=Asia/Shanghai -Dlog4j2.disable.jmx=true
                    -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${remote.debug.port}
                    -javaagent:/opt/glowroot/glowroot.jar -javaagent:/opt/xrebel/xrebel.jar
                </JAVA_OPTS>
            </properties>
        </profile>

        <profile>
            <id>测试环境</id>
            <properties>
                <SPRING_PROFILES>test</SPRING_PROFILES>
                <JAVA_OPTS>-Duser.timezone=Asia/Shanghai -Dlog4j2.disable.jmx=true
                    -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${remote.debug.port}
                    -javaagent:/opt/glowroot/glowroot.jar -javaagent:/opt/xrebel/xrebel.jar
                </JAVA_OPTS>
            </properties>
        </profile>

        <profile>
            <id>预发环境</id>
            <properties>
                <SPRING_PROFILES>prep</SPRING_PROFILES>
                <JAVA_OPTS>-Duser.timezone=Asia/Shanghai -Dlog4j2.disable.jmx=true
                    -Dcom.sun.net.ssl.checkRevocation=false
                </JAVA_OPTS>
            </properties>
        </profile>

        <profile>
            <id>生产环境</id>
            <properties>
                <SPRING_PROFILES>prod</SPRING_PROFILES>
                <JAVA_OPTS>-Duser.timezone=Asia/Shanghai -Dlog4j2.disable.jmx=true
                    -Dcom.sun.net.ssl.checkRevocation=false
                </JAVA_OPTS>
            </properties>
        </profile>
    </profiles>

    <build>
        <!--        <filters> &lt;!&ndash; 指定使用的filter文件，根据profile设置过滤文件 &ndash;&gt;-->
        <!--            <filter>src/main/resources/filter/${SPRING_PROFILES}.properties</filter>-->
        <!--        </filters>-->
        <!--开启资源过滤：将resources中配置文件的变量利用profile进行替换-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!--允许进行资源过滤-->
                <filtering>true</filtering>
                <excludes>
                    <exclude>filter</exclude>
                </excludes>
                <includes>
                    <include>*.yml</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <!-- maven-compiler-plugin 插件，解决 Lombok + MapStruct 组合 -->
            <!-- https://stackoverflow.com/questions/33483697/re-run-spring-boot-configuration-annotation-processor-to-update-generated-metada -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                    <showWarnings>true</showWarnings>
                    <compilerArgs>
                        <arg>
                            <!--设置成true 时，在生成的代码中不生成创建时间戳-->
                            <!-- -Amapstruct.suppressGeneratorTimestamp=false-->
                        </arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                            <version>${spring-boot.version}</version>
                        </path>
                        <path>
                            <groupId>io.github.linpeilie</groupId>
                            <artifactId>mapstruct-plus-processor</artifactId>
                            <version>${mapstruct-plus.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.6.13</version>
                <configuration>
                    <mainClass>com.framework.demo.DemoApplication</mainClass>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
