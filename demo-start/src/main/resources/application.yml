management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: '*'
  server:
    port: 8081
server:
  port: 8888
  servlet:
    context-path: /test
spring:
  main:
    allow-circular-references: true
  profiles:
    active: ${SPRING_PROFILES}
  application:
    name: demo
  datasource:
    username: suyouliang
    password: '%M5sCQXNUq'
    url: jdbc:mysql://121.40.156.55:3306/test_db?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull
    driver-class-name: com.mysql.cj.jdbc.Driver
    #hikari数据库连接池
    hikari:
      pool-name: Retail_HikariCP
      minimum-idle: 5 #最小空闲连接数量
      idle-timeout: 600000 #空闲连接存活最大时间，默认600000（10分钟）
      maximum-pool-size: 10 #连接池最大连接数，默认是10
      auto-commit: true  #此属性控制从池返回的连接的默认自动提交行为,默认值：true
      max-lifetime: 1800000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000
      connection-test-query: SELECT 1
  cloud:
    nacos:
      config:
        contextPath: /nacos
        server-addr: http://121.40.156.55:8848
      discovery:
        namespace: public
        server-addr: http://121.40.156.55:8848
    loadbalancer:
      cache:
        caffeine:
          spec:
  config:
    import:
      - nacos:demo.yaml?refresh=true
  jackson:
    date-format: "yyyy-MM-dd HH:mm:ss"
    time-zone: "GMT+8"
  redis:
    database: 0
    host: 121.40.156.55
    port: 6379
    password: '7g4QmjBwDU'
    timeout: 1200
    lettuce:
      pool:
        max-active: 16
        max-idle: 8
        max-wait: -1
        min-idle: 4



# MyBatis Plus 的配置项
mybatis-plus:
  #默认是:classpath:mapper/**/*.xml
  mapperLocations: classpath:mapper/**/*.xml
  configuration:
    map-underscore-to-camel-case: true # 虽然默认为 true ，但是还是显示去指定下。
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: AUTO # “智能”模式，基于 IdTypeEnvironmentPostProcessor + 数据源的类型，自动适配成 AUTO、INPUT 模式。
      #      id-type: AUTO # 自增 ID，适合 MySQL 等直接自增的数据库
      #      id-type: INPUT # 用户输入 ID，适合 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库
      #      id-type: ASSIGN_ID # 分配 ID，默认使用雪花算法。注意，Oracle、PostgreSQL、Kingbase、DB2、H2 数据库时，需要去除实体类上的 @KeySequence 注解
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
    banner: false # 关闭控制台的 Banner 打印

  encryptor:
    password: XDV71a+xqStEA3WH # 加解密的秘钥，可使用 https://www.imaegoo.com/2020/aes-key-generator/ 网站生成

mybatis-plus-join:
  banner: false # 关闭控制台的 Banner 打印
  #关闭副表逻辑删除 mysql join语法是先过滤后join,如果开启,副表逻辑删除where会过滤left join出来的null,必须关掉
  sub-table-logic: false

logging:
  level:
    com.ty.mid.framework.lock: debug
#knife4j相关配置,swagger增强
knife4j:
  enable: true
  setting:
    language: zh_cn


#↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓框架相关配置↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
framework:
  lock:
    enable: true
    implementer: redis
    dialect: true
    transaction-strategy: warming
  web:
    enable-mvc-url-prefix: true
    custom-api:
      core:
        prefix: /core
        controller: '**.web.**'
      other:
        prefix: /
        controller: '**'

  swagger:
    author: suyouliang
    version: 1.0.0
    description: domo项目接口文档
    title: 接口文档
    url: http://127.0.0.1:8080/swagger-ui/index.html
    license-url: license-url
    email: 282824942@qq.com
